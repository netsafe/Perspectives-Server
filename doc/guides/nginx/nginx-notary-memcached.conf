# NGinx http memcached module config http://nginx.org/en/docs/http/ngx_http_memcached_module.html
user  nginx;
worker_processes 2;

# Enable this option under the REALLY HEAVY load ONLY! It will slow down NGinx abit, but will prevent sky-high sysload
#timer_resolution 100ms;

worker_rlimit_nofile 8192;
worker_priority -1;

events {
    use epoll;
    worker_connections  2048;
}



http {
    include       mime.types.nginx;
    default_type  text/plain;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;

    types_hash_max_size 2048;
    client_body_timeout   10;
    client_header_timeout 10;
    keepalive_timeout     5 5;
    send_timeout          10;

    server_tokens off;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";

    gzip  on;
    gzip_min_length 100;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
    #gzip_disable "MSIE [1-6].(?!.*SV1)";
    gzip_disable "msie6"
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 3;
    gzip_buffers 64 8k;
    gzip_http_version 1.1;

    open_file_cache max=1024 inactive=600s;
    open_file_cache_valid 2000s;
    open_file_cache_min_uses 1;
    open_file_cache_errors on;

    proxy_cache_path /tmp/nginx.cache keys_zone=one:100m loader_threshold=300 loader_files=2000;
    proxy_temp_path /tmp/nginx.proxy_temp 1 2;

    #gunzip on;
# make ciphers really secure
	ssl_prefer_server_ciphers On;
	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-RSA-DES-CBC3-SHA256:EDH-RSA-DES-CBC3-SHA256:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:DES-CBC3-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4:!SHA1';

# STFU! Default host to bounce the unwanted request. If it's a notary-only nginx setup, delete it safely. Same about a HTTPS one
server {
    listen <your ip here>:80;
    return 404;
}

# Perspectives notary
    server {
	# If it's an IP-based setup, not a hostname one - comment all server_name's below
	server_name <your server name here>;
	listen <your ip here>:80 default_server;
	proxy_cache one;

	access_log off; # for increased user privacy
	log_not_found off;
	# If you're not using memcached module, just delete this '/' location and rename 'location @perspectives_notary' to 'location /'
	location / {
	    set $memcached_key "perspectives-$arg_host:$arg_port,$arg_service_type";
	    memcached_pass 127.0.0.1:11211;
	    proxy_intercept_errors on;
	    error_page 404 502 = @perspectives_notary;
	}

      location @perspectives_notary {
        proxy_pass http://127.0.0.1:8081;

	proxy_connect_timeout   120;
	proxy_send_timeout 	120;
	proxy_read_timeout 	180;
	proxy_http_version 1.1;


	proxy_cache_valid 200 4h;

        # only cache 404s long enough for the server to run a scan
        proxy_cache_valid 404 1m;

        # headers to improve security
	add_header X-Frame-Options DENY;
	add_header X-XSS-Protection '1; mode=block';
	add_header Content-Security-Policy "default-src 'none'; img-src 'self'; style-src 'self';";
	proxy_set_header  Host              	$host;
	proxy_set_header  X-Real-IP         	$remote_addr;
	proxy_set_header  X-Forwarded-For   	$proxy_add_x_forwarded_for;
	proxy_set_header Connection close;
	proxy_set_header X-Scheme $scheme;

	proxy_pass_header Content-Type;
	proxy_pass_header Content-Disposition;
	proxy_pass_header Content-Length;
	proxy_pass_header Server;
	proxy_pass_header Accept-Language;
      }
    }
# end of Perspectives notary

# STFU.HTTPS!
server {
    ssl on;
    ssi on;
    listen <your ip here>:443 ssl;
    server_tokens off;
    return 444;
    # Generate it like that: openssl req -x509 -nodes -days 3650 -newkey rsa:4096 -sha512 -keyout /www/ssl/sslstub.key -out /www/ssl/sslstub.crt
    ssl_certificate     /www/ssl/sslstub.crt;
    ssl_certificate_key /www/ssl/sslstub.key;
}

# Perspectives notary SSL
    server {
	# If it's an IP-based setup, not a hostname one - comment all server_name's below
	server_name <your server name here>;
	listen <your ip here>:443 ssl;
	proxy_cache one;

	ssl on;
	ssi on;
	# Generate it like that: openssl req -x509 -nodes -days 365 -newkey rsa:16384 -sha512 -keyout /www/ssl/sslcert.key -out /www/ssl/sslcert.crt
	ssl_certificate     /www/ssl/sslcert.crt;
	ssl_certificate_key /www/ssl/sslcert.key;


	access_log off; # for increased user privacy
	log_not_found off;
	# If you're not using memcached module, just delete this '/' location and rename 'location @perspectives_notary_ssl' to 'location /'
	location / {
	    set $memcached_key "perspectives-$arg_host:$arg_port,$arg_service_type";
	    memcached_pass 127.0.0.1:11211;
	    proxy_intercept_errors on;
	    error_page 404 502 = @perspectives_notary_ssl;
	}

      location @perspectives_notary_ssl {
        proxy_pass http://127.0.0.1:8081;

	proxy_connect_timeout   120;
	proxy_send_timeout 	120;
	proxy_read_timeout 	180;
	proxy_http_version 1.1;


	proxy_cache_valid 200 4h;

        # only cache 404s long enough for the server to run a scan
        proxy_cache_valid 404 1m;

        # headers to improve security
	add_header X-Frame-Options DENY;
	add_header X-XSS-Protection '1; mode=block';
	add_header Content-Security-Policy "default-src 'none'; img-src 'self'; style-src 'self';";
	proxy_set_header  Host              	$host;
	proxy_set_header  X-Real-IP         	$remote_addr;
	proxy_set_header  X-Forwarded-For   	$proxy_add_x_forwarded_for;
	proxy_set_header Connection close;
	proxy_set_header X-Scheme $scheme;

	proxy_pass_header Content-Type;
	proxy_pass_header Content-Disposition;
	proxy_pass_header Content-Length;
	proxy_pass_header Server;
	proxy_pass_header Accept-Language;
      }
    }
# end of Perspectives notary SSL


# end of http block
}
